const MIN_STORAGE_DURATION = 72 * 3600; ;; 3 days


const DEX_ROUTER_BITS = 16869;
const DEX_ROUTER_CELLS = 35;

const POOL_BITS = 14268;
const POOL_CELLS = 28;


const SEND_TO_DEX_ROUTER = 10245;
const DEPLOY_POOL_GAS = 10281;
const POOL_DEPOSIT_GAS = 12687;

;; Jetton transfer fees
const JETTON_NOTIFY_GAS_CONSUMPTION = 16721;
const SEND_TRANSFER_GAS_CONSUMPTION    = 9255;
const RECEIVE_TRANSFER_GAS_CONSUMPTION = 10355;

int calculate_dex_router_min_storage_fee() inline {
    return get_storage_fee(MY_WORKCHAIN, MIN_STORAGE_DURATION, DEX_ROUTER_BITS, DEX_ROUTER_CELLS);
}

int forward_init_state_overhead() inline {
    return get_simple_forward_fee(MY_WORKCHAIN, POOL_BITS, POOL_CELLS);
}


(int, int) cal_deploy_pool_fee(int fwd_fee) inline {
    int pool_gas_comsumption = get_precompiled_gas_consumption();
    int deposit_gas_consumption = null?(pool_gas_comsumption) ? POOL_DEPOSIT_GAS : pool_gas_comsumption;
    int deploy_pool_gas_consumption = null?(pool_gas_comsumption) ? DEPLOY_POOL_GAS : pool_gas_comsumption;
    

    int gas_comp = get_compute_fee(MY_WORKCHAIN, deposit_gas_consumption) + 
    get_compute_fee(MY_WORKCHAIN, deploy_pool_gas_consumption) + 
    calculate_dex_router_min_storage_fee();
    

    int total_fee = gas_comp + 
    fwd_fee * 1;

    return (total_fee, gas_comp);
}
