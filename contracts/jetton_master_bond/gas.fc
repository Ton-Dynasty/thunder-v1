const MIN_STORAGE_DURATION = 4 * 24 * 3600; ;; 4 days

;; Jetton Master Related
const JETTON_MASTER_BITS = 17737;
const JETTON_CELLS = 44;
const BUY_MEME_GAS = 12218; ;; ton the moon, 18452
const BURN_MEME_GAS = 10903;

;; Jetton Wallet Related
const JETTON_WALLET_INITSTATE_BITS  = 931;
const JETTON_WALLET_INITSTATE_CELLS = 3;
const JETTON_NOTIFY_GAS_CONSUMPTION = 16721;
const SEND_TRANSFER_GAS_CONSUMPTION    = 9255;
const RECEIVE_TRANSFER_GAS_CONSUMPTION = 10355;

;; Dex Router Related
const DEX_ROUTER_BITS = 36450;
const DEX_ROUTER_CELLS = 74;
const SEND_TO_DEX_ROUTER = 10245;
const DEPLOY_POOL_GAS = 10774;

;; Pool Related
const POOL_BITS = 21950;
const POOL_CELLS = 47;
const BUILD_POOL_GAS_FEE = 100000000; ;; 0.1 TON

int calculate_master_min_storage_fee() inline {
    return get_storage_fee(MY_WORKCHAIN, MIN_STORAGE_DURATION, JETTON_MASTER_BITS, JETTON_CELLS);
}

int forward_pool_init_state_overhead() inline {
    return get_simple_forward_fee(MY_WORKCHAIN, POOL_BITS, POOL_CELLS);
}

int forward_wallet_init_state_overhead() inline {
    return get_simple_forward_fee(MY_WORKCHAIN, JETTON_WALLET_INITSTATE_BITS, JETTON_WALLET_INITSTATE_CELLS);
}

int get_jetton_transfer_fee() inline {
    int pool_gas_consumption = get_precompiled_gas_consumption();
    int send_transfer_gas_consumption = null?(pool_gas_consumption) ? SEND_TRANSFER_GAS_CONSUMPTION : pool_gas_consumption;
    int receive_transfer_gas_consumption = null?(pool_gas_consumption) ? RECEIVE_TRANSFER_GAS_CONSUMPTION : pool_gas_consumption;
    return get_compute_fee(MY_WORKCHAIN, send_transfer_gas_consumption) + get_compute_fee(MY_WORKCHAIN, receive_transfer_gas_consumption);
}

(int, int) cal_buy_fee(int fwd_fee) inline {
    int pool_gas_consumption = get_precompiled_gas_consumption();
    int buy_meme_gas_consumption = null?(pool_gas_consumption) ? BUY_MEME_GAS : pool_gas_consumption;
    int receive_transfer_gas_consumption = null?(pool_gas_consumption) ? RECEIVE_TRANSFER_GAS_CONSUMPTION : pool_gas_consumption;
    

    int gas_comp = get_compute_fee(MY_WORKCHAIN, buy_meme_gas_consumption) + 
    calculate_master_min_storage_fee() + 
    forward_wallet_init_state_overhead();
    

    int total_fee = gas_comp + 
    fwd_fee * 2  + 
    get_compute_fee(MY_WORKCHAIN, receive_transfer_gas_consumption);

    return (total_fee, gas_comp);
}

(int, int) cal_sell_fee(int fwd_fee) inline {
    int pool_gas_consumption = get_precompiled_gas_consumption();
    int sell_meme_gas_consumption = null?(pool_gas_consumption) ? BURN_MEME_GAS : pool_gas_consumption;
    

    int gas_comp = get_compute_fee(MY_WORKCHAIN, sell_meme_gas_consumption) + 
    calculate_master_min_storage_fee();
    

    int total_fee = gas_comp + 
    fwd_fee * 1;

    return (total_fee, gas_comp);
}