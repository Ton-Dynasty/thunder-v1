#include "../common/gas.fc";
const BUILD_POOL_GAS = ONE_TON * 2 / 100; ;; 0.02
const MINT_GAS = ONE_TON * 3 / 100; ;; 0.03
const DEDUST_ADD_TON_GAS = 300000000; ;; 0.15
const DEDUST_FOWARD_GAS = 400000000; ;; 0.4
const DEDUST_SEND_GAS = 100000000; ;; 0.1

int calculate_master_min_storage_fee() inline {
    return get_storage_fee(MY_WORKCHAIN, MIN_STORAGE_DURATION, JETTON_MASTER_BITS, JETTON_CELLS);
}

int forward_pool_init_state_overhead() inline {
    return get_simple_forward_fee(MY_WORKCHAIN, POOL_BITS, POOL_CELLS);
}

(int, int) cal_buy_fee(int fwd_fee) inline {
    int master_gas_consumption = get_precompiled_gas_consumption();
    int buy_meme_gas_consumption = null?(master_gas_consumption) ? BUY_MEME_GAS : master_gas_consumption;
    int receive_transfer_gas_consumption = null?(master_gas_consumption) ? RECEIVE_TRANSFER_GAS_CONSUMPTION : master_gas_consumption;
    

    int gas_comp = get_compute_fee(MY_WORKCHAIN, buy_meme_gas_consumption) + 
    calculate_master_min_storage_fee() + 
    EMIT_GAS +
    forward_wallet_init_state_overhead();
    

    int total_fee = gas_comp + 
    fwd_fee * 2  + 
    get_compute_fee(MY_WORKCHAIN, receive_transfer_gas_consumption);

    return (total_fee, gas_comp);
}

(int, int) cal_sell_fee(int fwd_fee) inline {
    int master_gas_consumption = get_precompiled_gas_consumption();
    int sell_meme_gas_consumption = null?(master_gas_consumption) ? BURN_MEME_GAS : master_gas_consumption;
    

    int gas_comp = get_compute_fee(MY_WORKCHAIN, sell_meme_gas_consumption) + 
    EMIT_GAS +
    calculate_master_min_storage_fee();
    

    int total_fee = gas_comp + 
    fwd_fee * 1;

    return (total_fee, gas_comp);
}

(int, int) cal_claim_fee(int fwd_fee) inline {
    int master_gas_consumption = get_precompiled_gas_consumption();
    int claim_admin_gas_consumption = null?(master_gas_consumption) ? CLAIM_ADMIN_FEE : master_gas_consumption;
    

    int gas_comp = get_compute_fee(MY_WORKCHAIN, claim_admin_gas_consumption) + 
    calculate_master_min_storage_fee();
    

    int total_fee = gas_comp + 
    fwd_fee * 1;

    return (total_fee, gas_comp);
}