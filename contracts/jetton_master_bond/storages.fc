global int master::total_supply; ;; Total supply of the meme token (10^8).
global slice master::admin_address; ;; Admin address for managing fees and contract updates.
global int master::ton_reserves; ;; TON stored in bonding curve, starts at 0.
global int master::jetton_reserves; ;; Remaining jettons, starts at 10^8.
global int master::fee; ;; Accumulated trading fees for admin.
global int master::on_moon; ;; Listing status: -1 if listed, 0 if not.
global cell master::jetton_wallet_code; ;; Meme token wallet code.
global cell master::jetton_content; ;; Information about the meme token.

() master::load_data() impure inline_ref {
    slice ds = get_data().begin_parse();
    master::total_supply = ds~load_coins();
    master::admin_address = ds~load_msg_addr();
    master::ton_reserves = ds~load_coins();
    master::jetton_reserves = ds~load_coins();
    master::fee = ds~load_coins();


    ;; load basic info
    slice basic_info = ds~load_ref().begin_parse();
    master::on_moon = basic_info~load_bool();
    master::jetton_wallet_code = basic_info~load_ref();
    master::jetton_content = basic_info~load_ref();
}

() master::save_data() impure inline_ref {
    ;; pack basic info
    cell basic_info = begin_cell()
        .store_bool(master::on_moon)
        .store_ref(master::jetton_wallet_code)
        .store_ref(master::jetton_content)
    .end_cell();

    ;; set data
    set_data(
        begin_cell()
            .store_coins(master::total_supply)
            .store_slice(master::admin_address)
            .store_coins(master::ton_reserves)
            .store_coins(master::jetton_reserves)
            .store_coins(master::fee)
            .store_ref(basic_info)
        .end_cell()
    );
}